Okay, so I have to first create a set of standard routes

What does a route look like?

It contains a "from" and a "to" and a list of merchandise of random
quantities

Right

So I guess I need to first just find a list of merchandise and a list of places
in the Netherlands

I didn't want to copy-paste a list. That's ugly

So I want to use a places.json list that I found and I want to decode that json
into a Haskell datatype that is the list of the places

First I define a datatype that corresponds to the JSON structure

Okay, so I was able to decode the JSON into a [Place], it's kinda ugly but
who cares about perfection for this, yeah?

Next thing I need to do is decode some merchandise/grocery list that's in json
to another Haskell datatype

Found a shitty product.json with not a lot of products but it'll have to do

Now, I have to decode this into a [Product]

Done with that

So now, I've a list of places and a list of products

Now I have to create two kinds of routes - standard and actual routes

Man, trying to understand quickcheck Generator stuff is hard. I've been reading
for a while now and I still don't get it!

How about we try again tomorrow?

I think I've got a better understanding of the generator crap now

Let's see, what do we have to do again?

I have to create random Trip

So, some amount of success in creating a random Trip

But I've got two things to do

First, I've passed a small list of products and places, I need to make it the
whole big json products and places things

Next I also have to take care of making a random list of merchandise with random quantities
